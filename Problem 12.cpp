// Problem 11.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>
#include <cmath>
/* Soultion for Problem 12:
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

*/


int main()
{
	int y = 2;
	for (int x = 1; x < 100000000; x+=y++) // Go through triangle numbers below 100 million
	{
		int s = sqrt(x);
		int n = 0;  // n will be number of divisors for each triangle number
		for (int j = 1; j <s+1; j++) // check all numbers up to sqrt x
		{
			if (x%j == 0)  // if it is a divisor of x the add 1 to n
			{
				n++;
			}
			if (n > 250) // if n reaches 251 there will be at least 501 as any factors below sqrt will be paired with one above
			{
				std::cout << x << "\n";
				return 0;
			}
		}

	}
    return 0;
}

